//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: WaitSetDataDcps.cpp
//  Source: WaitSetDataDcps.idl
//  Generated: Sun Mar 29 12:04:22 2020
//  OpenSplice 6.9.181018OSS
//  
//******************************************************************

#include "WaitSetDataDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUVLSeq < Messenger::Message, struct MessageSeq_uniq_>;
#endif

const char * Messenger::MessageTypeSupportInterface::_local_id = "IDL:Messenger/MessageTypeSupportInterface:1.0";

Messenger::MessageTypeSupportInterface_ptr Messenger::MessageTypeSupportInterface::_duplicate (Messenger::MessageTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean Messenger::MessageTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, Messenger::MessageTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

Messenger::MessageTypeSupportInterface_ptr Messenger::MessageTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   Messenger::MessageTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (Messenger::MessageTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < Messenger::MessageTypeSupportInterface_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

Messenger::MessageTypeSupportInterface_ptr Messenger::MessageTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   Messenger::MessageTypeSupportInterface_ptr result;
   result = dynamic_cast < Messenger::MessageTypeSupportInterface_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * Messenger::MessageDataWriter::_local_id = "IDL:Messenger/MessageDataWriter:1.0";

Messenger::MessageDataWriter_ptr Messenger::MessageDataWriter::_duplicate (Messenger::MessageDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean Messenger::MessageDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, Messenger::MessageDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

Messenger::MessageDataWriter_ptr Messenger::MessageDataWriter::_narrow (DDS::Object_ptr p)
{
   Messenger::MessageDataWriter_ptr result = NULL;
   if (p && p->_is_a (Messenger::MessageDataWriter::_local_id))
   {
      result = dynamic_cast < Messenger::MessageDataWriter_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

Messenger::MessageDataWriter_ptr Messenger::MessageDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   Messenger::MessageDataWriter_ptr result;
   result = dynamic_cast < Messenger::MessageDataWriter_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * Messenger::MessageDataReader::_local_id = "IDL:Messenger/MessageDataReader:1.0";

Messenger::MessageDataReader_ptr Messenger::MessageDataReader::_duplicate (Messenger::MessageDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean Messenger::MessageDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, Messenger::MessageDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

Messenger::MessageDataReader_ptr Messenger::MessageDataReader::_narrow (DDS::Object_ptr p)
{
   Messenger::MessageDataReader_ptr result = NULL;
   if (p && p->_is_a (Messenger::MessageDataReader::_local_id))
   {
      result = dynamic_cast < Messenger::MessageDataReader_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

Messenger::MessageDataReader_ptr Messenger::MessageDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   Messenger::MessageDataReader_ptr result;
   result = dynamic_cast < Messenger::MessageDataReader_ptr> (p);
   if (result) result->m_count++;
   return result;
}

const char * Messenger::MessageDataReaderView::_local_id = "IDL:Messenger/MessageDataReaderView:1.0";

Messenger::MessageDataReaderView_ptr Messenger::MessageDataReaderView::_duplicate (Messenger::MessageDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean Messenger::MessageDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, Messenger::MessageDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

Messenger::MessageDataReaderView_ptr Messenger::MessageDataReaderView::_narrow (DDS::Object_ptr p)
{
   Messenger::MessageDataReaderView_ptr result = NULL;
   if (p && p->_is_a (Messenger::MessageDataReaderView::_local_id))
   {
      result = dynamic_cast < Messenger::MessageDataReaderView_ptr> (p);
      if (result) result->m_count++;
   }
   return result;
}

Messenger::MessageDataReaderView_ptr Messenger::MessageDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   Messenger::MessageDataReaderView_ptr result;
   result = dynamic_cast < Messenger::MessageDataReaderView_ptr> (p);
   if (result) result->m_count++;
   return result;
}



